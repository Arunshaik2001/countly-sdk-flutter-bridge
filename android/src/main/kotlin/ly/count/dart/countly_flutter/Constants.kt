package ly.count.dart.countly_flutter

internal object Constants {

    object MethodNameConstants {
        const val init = "init"
        const val isInitialized = "isInitialized"
        const val getCurrentDeviceId = "getCurrentDeviceId"
        const val getDeviceIDType = "getDeviceIDType"
        const val changeDeviceId = "changeDeviceId"
        const val enableTemporaryIdMode = "enableTemporaryIdMode"
        const val setHttpPostForced = "setHttpPostForced"
        const val enableParameterTamperingProtection = "enableParameterTamperingProtection"
        const val setLocationInit = "setLocationInit"
        const val setLocation = "setLocation"
        const val setUserLocation = "setUserLocation"
        const val enableCrashReporting = "enableCrashReporting"
        const val addCrashLog = "addCrashLog"
        const val logException = "logException"
        const val setCustomCrashSegment = "setCustomCrashSegment"
        const val sendPushToken = "sendPushToken"
        const val askForNotificationPermission = "askForNotificationPermission"
        const val pushTokenType = "pushTokenType"
        const val registerForNotification = "registerForNotification"
        const val beginSession = "beginSession"
        const val updateSession = "updateSession"
        const val endSession = "endSession"
        const val start = "start"
        const val manualSessionHandling = "manualSessionHandling"
        const val stop = "stop"
        const val updateSessionPeriod = "updateSessionPeriod"
        const val updateSessionInterval = "updateSessionInterval"
        const val eventSendThreshold = "eventSendThreshold"
        const val storedRequestsLimit = "storedRequestsLimit"
        const val startEvent = "startEvent"
        const val endEvent = "endEvent"
        const val recordEvent = "recordEvent"
        const val setLoggingEnabled = "setLoggingEnabled"
        const val setuserdata = "setuserdata"
        const val userData_setProperty = "userData_setProperty"
        const val userData_increment = "userData_increment"
        const val userData_incrementBy = "userData_incrementBy"
        const val userData_multiply = "userData_multiply"
        const val userData_saveMax = "userData_saveMax"
        const val userData_saveMin = "userData_saveMin"
        const val userData_setOnce = "userData_setOnce"
        const val userData_pushUniqueValue = "userData_pushUniqueValue"
        const val userData_pushValue = "userData_pushValue"
        const val userData_pullValue = "userData_pullValue"
        const val setRequiresConsent = "setRequiresConsent"
        const val giveConsentInit = "giveConsentInit"
        const val giveConsent = "giveConsent"
        const val removeConsent = "removeConsent"
        const val giveAllConsent = "giveAllConsent"
        const val removeAllConsent = "removeAllConsent"
        const val sendRating = "sendRating"
        const val recordView = "recordView"
        const val setOptionalParametersForInitialization = "setOptionalParametersForInitialization"
        const val setRemoteConfigAutomaticDownload = "setRemoteConfigAutomaticDownload"
        const val remoteConfigUpdate = "remoteConfigUpdate"
        const val updateRemoteConfigForKeysOnly = "updateRemoteConfigForKeysOnly"
        const val updateRemoteConfigExceptKeys = "updateRemoteConfigExceptKeys"
        const val remoteConfigClearValues = "remoteConfigClearValues"
        const val getRemoteConfigValueForKey = "getRemoteConfigValueForKey"
        const val presentRatingWidgetWithID = "presentRatingWidgetWithID"
        const val setStarRatingDialogTexts = "setStarRatingDialogTexts"
        const val askForStarRating = "askForStarRating"
        const val getAvailableFeedbackWidgets = "getAvailableFeedbackWidgets"
        const val presentFeedbackWidget = "presentFeedbackWidget"
        const val getFeedbackWidgetData = "getFeedbackWidgetData"
        const val reportFeedbackWidgetManually = "reportFeedbackWidgetManually"
        const val replaceAllAppKeysInQueueWithCurrentAppKey = "replaceAllAppKeysInQueueWithCurrentAppKey"
        const val removeDifferentAppKeysFromQueue = "removeDifferentAppKeysFromQueue"
        const val startTrace = "startTrace"
        const val cancelTrace = "cancelTrace"
        const val clearAllTraces = "clearAllTraces"
        const val endTrace = "endTrace"
        const val recordNetworkTrace = "recordNetworkTrace"
        const val enableApm = "enableApm"
        const val throwNativeException = "throwNativeException"
        const val recordIndirectAttribution = "recordIndirectAttribution"
        const val recordDirectAttribution = "recordDirectAttribution"
        const val appLoadingFinished = "appLoadingFinished"
    }
}